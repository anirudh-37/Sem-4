class Node:
    def __init__(self,val):
        self.left = None
        self.right = None
        self.data = val

def insert(root,val):
    if root is None:
        return Node(val)
    else:
        if root.data == val:
            return root
        elif root.data > val:
            root.left = insert(root.left,val)
        else:
            root.right = insert(root.right,val)
    return root
def inorder(root):
    if root:
        inorder(root.left)
        print(root.data,end = " -> ")
        inorder(root.right)

def minelement(node):
    while(node.left):
        node = node.left
    return node
def delete(root,val):
    if root is None:
        return root
    if root.data > val:
        root.left = delete(root.left,val)
    elif root.data < val:
        root.right = delete(root.right,val)
    else:
        if root.left is None:
            temp = root
            root = None
            return temp.right
        elif root.right is None:
            temp = root
            root = None
            return temp.left
        
        x = minelement(root.right)
        root.data = x.data
        root.right = delete(root.right,x.data)
    return root
        
    
    
    
    
r = Node(50)
r = insert(r,20)
r = insert(r,30)
r = insert(r,70)
r = insert(r,100)
r = insert(r,40)
inorder(r)
print("After")
r = delete(r,70)
r = delete(r,50)
inorder(r)
        
